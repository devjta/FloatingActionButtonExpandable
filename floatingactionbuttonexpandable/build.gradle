apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
//apply plugin: 'maven'



android {

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileSdkVersion rootProject.COMPILE_SDK_VERSION

    defaultConfig {
        minSdkVersion rootProject.MIN_SDK_VERSION
        targetSdkVersion rootProject.TARGET_SDK_VERSION
        versionCode rootProject.VERSION_CODE
        versionName rootProject.VERSION_NAME

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
}
repositories {
    mavenCentral()
}


afterEvaluate {
    def propFile = file("${project.rootDir}/local.properties")
    Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if(props['aws_username'] != null) {
        publishing {
            publications {
                lib(MavenPublication) {
                    groupId 'com.github.devjta'
                    artifactId 'FloatingActionButtonExpandable'
                    version 'eb7bfa9422'
                    artifact(bundleReleaseAar)
                }
            }
            repositories {
                maven {
                    url = props['aws_bucket']
                    credentials(AwsCredentials) {
                        accessKey = props['aws_username']
                        secretKey = props['aws_password']
                    }
                }
            }
        }
    }
    else{
        print "NOT PUBLISHING - ENV VARIABLES ARE MISSING"
    }
}
